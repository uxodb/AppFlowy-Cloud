
services:
  nginx:
    restart: on-failure
    image: nginx:alpine
    healthcheck:
      test: ['CMD-SHELL', 'ash -c "[[ $$(curl -s -o /dev/null -w \"%{http_code}\" http://localhost:80) == \"308\" ]]" || exit 1']
      start_period: 10s
      interval: 10s
      retries: 5
      timeout: 3s
    depends_on:
      gotrue:
        condition: service_started
      appflowy_cloud:
        condition: service_started
      admin_frontend:
        condition: service_started
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks: 
      - proxy
      - def01
    labels:
      - traefik.http.routers.appflowy.entrypoints=websecure
      - traefik.http.routers.appflowy.rule=Host(`${FQDN}`)
      - traefik.http.routers.appflowy.tls=true
      - traefik.http.routers.appflowy.tls.certresolver=lets-encrypt
      - traefik.http.routers.appflowy.middlewares=noRobots@file

  postgres-flowy:
    restart: on-failure
    build:
      context: ./postgres
      dockerfile: postgres.Dockerfile
    environment:
      - POSTGRES_USER
      - POSTGRES_DB
      - POSTGRES_PASSWORD
      - POSTGRES_HOST
    volumes:
      - ./migrations/before:/docker-entrypoint-initdb.d
      - ${POSTGRES_DATA}:/var/lib/postgresql/data
    networks:
      - def01
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s

  redis-flowy:
    restart: on-failure
    image: redis
    networks:
      - def01
    volumes:
      - ${REDIS_DATA}:/data

  gotrue:
    build:
      context: .
      dockerfile: docker/gotrue.Dockerfile
    depends_on:
      postgres-flowy:
        condition: service_healthy
    restart: on-failure
    #   image: appflowyinc/gotrue:${GOTRUE_VERSION:-latest}
    networks:
      - def01
    environment:
      - GOTRUE_SITE_URL=appflowy-flutter://
      - URI_ALLOW_LIST=*
      - GOTRUE_JWT_SECRET
      - GOTRUE_JWT_EXP
      - GOTRUE_DB_DRIVER=postgres
      - API_EXTERNAL_URL
      - DATABASE_URL=${GOTRUE_DATABASE_URL}
      - PORT=9999
      - GOTRUE_SMTP_HOST
      - GOTRUE_SMTP_PORT
      - GOTRUE_SMTP_USER
      - GOTRUE_SMTP_PASS
      - GOTRUE_MAILER_URLPATHS_CONFIRMATION=/gotrue/verify
      - GOTRUE_MAILER_URLPATHS_INVITE=/gotrue/verify
      - GOTRUE_MAILER_URLPATHS_RECOVERY=/gotrue/verify
      - GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE=/gotrue/verify
      - GOTRUE_SMTP_ADMIN_EMAIL
      - GOTRUE_SMTP_MAX_FREQUENCY
      - GOTRUE_RATE_LIMIT_EMAIL_SENT=${GOTRUE_RATE_LIMIT_EMAIL_SENT:-100}
      - GOTRUE_MAILER_AUTOCONFIRM=${GOTRUE_MAILER_AUTOCONFIRM:-false}
      # Google OAuth config
      - GOTRUE_EXTERNAL_GOOGLE_ENABLED
      - GOTRUE_EXTERNAL_GOOGLE_CLIENT_ID
      - GOTRUE_EXTERNAL_GOOGLE_SECRET
      - GOTRUE_EXTERNAL_GOOGLE_REDIRECT_URI
      # GITHUB OAuth config
      - GOTRUE_EXTERNAL_GITHUB_ENABLED
      - GOTRUE_EXTERNAL_GITHUB_CLIENT_ID
      - GOTRUE_EXTERNAL_GITHUB_SECRET
      - GOTRUE_EXTERNAL_GITHUB_REDIRECT_URI
      # Discord OAuth config
      - GOTRUE_EXTERNAL_DISCORD_ENABLED
      - GOTRUE_EXTERNAL_DISCORD_CLIENT_ID
      - GOTRUE_EXTERNAL_DISCORD_SECRET
      - GOTRUE_EXTERNAL_DISCORD_REDIRECT_URI

  appflowy_cloud:
    depends_on:
      postgres-flowy:
        condition: service_healthy
    restart: on-failure
    image: appflowyinc/appflowy_cloud:${APPFLOWY_CLOUD_VERSION:-latest}
    networks: 
      - def01
    environment:
      - RUST_LOG=${RUST_LOG:-info}
      - APPFLOWY_ENVIRONMENT=production
      - APPFLOWY_DATABASE_URL
      - APPFLOWY_REDIS_URI
      - APPFLOWY_GOTRUE_JWT_SECRET=${GOTRUE_JWT_SECRET}
      - APPFLOWY_GOTRUE_JWT_EXP=${GOTRUE_JWT_EXP}
      - APPFLOWY_GOTRUE_BASE_URL
      - APPFLOWY_GOTRUE_EXT_URL=${API_EXTERNAL_URL}
      - APPFLOWY_GOTRUE_ADMIN_EMAIL=${GOTRUE_ADMIN_EMAIL}
      - APPFLOWY_GOTRUE_ADMIN_PASSWORD=${GOTRUE_ADMIN_PASSWORD}
      - APPFLOWY_S3_USE_MINIO
      - APPFLOWY_S3_MINIO_URL
      - APPFLOWY_S3_ACCESS_KEY
      - APPFLOWY_S3_SECRET_KEY
      - APPFLOWY_S3_BUCKET
      - APPFLOWY_S3_REGION
      - APPFLOWY_ACCESS_CONTROL
      - APPFLOWY_DATABASE_MAX_CONNECTIONS
    build:
      context: .
      dockerfile: Dockerfile
      args:
        FEATURES: ""

  admin_frontend:
    depends_on:
      appflowy_cloud:
        condition: service_started
      gotrue:
        condition: service_started
    restart: on-failure
    image: appflowyinc/admin_frontend:${APPFLOWY_ADMIN_FRONTEND_VERSION:-latest}
    build:
      context: .
      dockerfile: ./admin_frontend/Dockerfile
    networks:
      - def01
    environment:
      - RUST_LOG=${RUST_LOG:-info}
      - ADMIN_FRONTEND_REDIS_URL
      - ADMIN_FRONTEND_GOTRUE_URL
      - ADMIN_FRONTEND_APPFLOWY_CLOUD_URL=${ADMIN_FRONTEND_APPFLOWY_CLOUD_URL:-http://appflowy_cloud:8000}

  appflowy_history:
    depends_on:
      postgres-flowy:
        condition: service_healthy
    restart: on-failure
    image: appflowyinc/appflowy_history:${APPFLOWY_HISTORY_VERSION:-latest}
    build:
      context: .
      dockerfile: ./services/appflowy-history/Dockerfile
    networks: 
      - def01
    environment:
      - RUST_LOG=${RUST_LOG:-info}
      - APPFLOWY_HISTORY_REDIS_URL
      - APPFLOWY_HISTORY_ENVIRONMENT=production
      - APPFLOWY_HISTORY_DATABASE_NAME
      - APPFLOWY_HISTORY_DATABASE_URL


networks:
  def01:
    external: true
  proxy:
    external: true
